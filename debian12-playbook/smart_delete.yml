- name: Smart file/dir deleter
  hosts: all
  become: yes
  become_user: root
  become_method: sudo

  vars:
    path_var: "/mnt/extdisk1/downloads/*"  # accetta /path, /path/, /path/*
    safety_checks: true                    # âœ… abilitabile/disattivabile

  tasks:
    - name: Fail on dangerous paths (/, /etc, etc.)
      fail:
        msg: "Refusing to operate on critical path: {{ path_var }}"
      when:
        - safety_checks
        - path_var.rstrip('/') in ["/", "/etc", "/var", "/bin", "/boot", "/usr", "/lib", "/lib64", "/sbin", "/dev", "/proc", "/sys"]

    - name: Handle wildcard deletion - delete only contents
      file:
        path: "{{ item }}"
        state: absent
      with_fileglob:
        - "{{ path_var }}"
      when: path_var.endswith('*')

    - name: Normalize path (remove trailing slashes)
      set_fact:
        norm_path: "{{ path_var.rstrip('/') }}"
      when: not path_var.endswith('*')

    - name: Stat the path
      stat:
        path: "{{ norm_path }}"
      register: path_stat
      when: not path_var.endswith('*')

    - name: Delete a directory completely
      file:
        path: "{{ norm_path }}"
        state: absent
      when:
        - not path_var.endswith('*')
        - path_stat.stat.isdir

    - name: Delete a file
      file:
        path: "{{ norm_path }}"
        state: absent
      when:
        - not path_var.endswith('*')
        - path_stat.stat.exists
        - path_stat.stat.isdir is not defined or not path_stat.stat.isdir
