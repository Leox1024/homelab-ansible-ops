- name: Ottenimento/Rinnovo certificato SSL per un dominio con DNS-Cloudflare
  hosts: all
  become: yes
  become_user: root
  become_method: sudo

  vars:
    # --- Variabili principali (cambia solo qui).
    # Dominio per cui ottenere/rinnovare il certificato
    domain_name: "domain.com"           # ‚ùó Cambia con il tuo dominio
    # Email per le notifiche Let‚Äôs Encrypt
    email: "admin@domain.com"           # ‚ùó Cambia con la tua email
    # API token Cloudflare
    cloudflare_token: "abcdefg1234567"  # ‚ùó Cambia con il tuo reale token
    # Percorso stabile per le credenziali DNS-Cloudflare
    cf_credentials_path: "/etc/letsencrypt/secrets/cloudflare-{{ domain_name }}.ini"

  tasks:

    # 1) Installazione di Certbot e del plugin DNS-Cloudflare
    - name: Installa Certbot e plugin DNS-Cloudflare
      apt:
        name:
          - certbot
          - python3-certbot-dns-cloudflare
        state: present
        update_cache: yes
      # Se usi RHEL/CentOS, sostituisci con yum o dnf:
      # - name: Installa Certbot e plugin DNS-Cloudflare (CentOS/RHEL)
      #   yum:
      #     name:
      #       - certbot
      #       - python3-certbot-dns-cloudflare
      #     state: present

    # 2) Creo la directory che conterr√† il file di credenziali Cloudflare
    #    Principio: la mantengo sempre, cos√¨ i rinnovi futuri la troveranno senza ricrearla.
    - name: Crea la directory per le credenziali Cloudflare
      file:
        path: "/etc/letsencrypt/secrets"
        state: directory
        owner: root
        group: root
        mode: "0700"

    # 3) Scrivo il file con il token Cloudflare in un percorso fisso
    #    Questo serve a Certbot per il challenge DNS.
    - name: Scrivi file credenziali Cloudflare per {{ domain_name }}
      copy:
        dest: "{{ cf_credentials_path }}"
        content: |
          dns_cloudflare_api_token = {{ cloudflare_token }}
        owner: root
        group: root
        mode: "0600"

    # 4) Controllo se il certificato esiste gi√† in /etc/letsencrypt/live/{{ domain_name }}/
    - name: Verifica esistenza certificato di {{ domain_name }}
      stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: cert_stat

    # 5) Se non esiste ancora, eseguo il primo rilascio del certificato
    - name: Rilascio iniziale certificato SSL per {{ domain_name }}
      ansible.builtin.command: >
        certbot certonly
        --dns-cloudflare
        --dns-cloudflare-credentials "{{ cf_credentials_path }}"
        -d "{{ domain_name }}"
        --agree-tos
        --non-interactive
        --email "{{ email }}"
      args:
        creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      when: not cert_stat.stat.exists
      register: certbot_initial

    # 6) Se esiste gi√† (quindi ho gi√† emesso almeno una volta),
    #    posso decidere se voglio forzare il rinnovo o lasciare che Certbot gestisca il rinnovo automatico.
    #
    #    6.a) Se voglio solo ‚Äúaccertarmi‚Äù che la configurazione sia a posto (ma non forzo rinnovo),
    #         mi limito a far nulla: la struttura di Certbot prevede che un cron/systemd timer
    #         predefinito faccia il renew 2 volte al giorno.
    #
    #    6.b) Se invece voglio rigenerare/subito (anche se mancano ancora 60 giorni),
    #         ho bisogno di forzare il rinnovo con --force-renewal.
    #
    #    Per semplicit√†, qui mostro come aggiungere un flag variabile ‚Äúforce_renew‚Äù:
    - name: Forza rinnovo certificato (se richiesto)
      ansible.builtin.command: >
        certbot certonly
        --dns-cloudflare
        --dns-cloudflare-credentials "{{ cf_credentials_path }}"
        -d "{{ domain_name }}"
        --agree-tos
        --non-interactive
        --email "{{ email }}"
        --force-renewal
      when:
        - cert_stat.stat.exists
        - force_renew | default(false)    # Se vuoi forzare da CLI: -e force_renew=true
      register: certbot_forcerenew

    # 7) Debug finale per segnalare risultato
    - name: risultato emissione/rinnovo
      debug:
        msg: |
          {% if certbot_initial is defined and certbot_initial.rc == 0 %}
          ‚úÖ Primo certificato per {{ domain_name }} creato con successo. 
          Lo trovi in /etc/letsencrypt/live/{{ domain_name }}/
          {% elif certbot_forcerenew is defined and certbot_forcerenew.rc == 0 %}
          üîÑ Certificato per {{ domain_name }} rigenerato (forzato) con successo.
          Lo trovi in /etc/letsencrypt/live/{{ domain_name }}/
          {% else %}
          ‚ÑπÔ∏è Certificato per {{ domain_name }} era gi√† presente e non √® stato forzato il rinnovo. 
          Controlla `/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem`.
          {% endif %}
