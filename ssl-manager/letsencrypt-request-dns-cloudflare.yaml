# Issues or renews a Letâ€™s Encrypt cert via DNS-Cloudflare when <= expiration_threshold days remain.
# Set domain_name, email, cloudflare_token, and expiration_threshold above.
# Use this playbook for "barebone" renew certificate using certbot
# This script will not probably not work with other plugin like nginx, ecc

- name: obtain/Renew SSL Certificate for a Domain Using Cloudflare DNS
  hosts: all
  become: yes
  become_user: root
  become_method: sudo

  vars:
    # Main variables (modify only here)
    domain_name: "domain.com"           # replace with your domain
    email: "admin@domain.com"           # replace with your email
    cloudflare_token: "abcdefg1234567"  # replace with your actual token
    cf_credentials_path: "/etc/letsencrypt/secrets/cloudflare-{{ domain_name }}.ini"
    expiration_threshold: 41            # days before expiration to force renewal

  tasks:
    - name: install Certbot and DNS-Cloudflare plugin
      apt:
        name:
          - openssl
          - certbot
          - python3-certbot-dns-cloudflare
        state: present
        update_cache: yes

    - name: create directory for Cloudflare credentials
      file:
        path: "/etc/letsencrypt/secrets"
        state: directory
        owner: root
        group: root
        mode: "0700"

    - name: write Cloudflare credentials file for {{ domain_name }}
      copy:
        dest: "{{ cf_credentials_path }}"
        content: |
          dns_cloudflare_api_token = {{ cloudflare_token }}
        owner: root
        group: root
        mode: "0600"

    - name: check existence of certificate for {{ domain_name }}
      stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: cert_stat

    # If certificate does not exist -> perform the initial issuance
    - name: initial issuance of SSL certificate for {{ domain_name }}
      command: >
        certbot certonly
        --dns-cloudflare
        --dns-cloudflare-credentials "{{ cf_credentials_path }}"
        -d "{{ domain_name }}"
        --agree-tos
        --non-interactive
        --email "{{ email }}"
      args:
        creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      when: not cert_stat.stat.exists
      register: certbot_initial

    # If certificate exists -> get expiration date
    - name: retrieve certificate expiration date
      shell: >
        openssl x509 -in /etc/letsencrypt/live/{{ domain_name }}/cert.pem -noout -enddate
      register: cert_enddate_raw
      when: cert_stat.stat.exists
      changed_when: false

    - name: calculate days until certificate expires
      when: cert_stat.stat.exists
      set_fact:
        cert_days_left: "{{ ((cert_enddate_raw.stdout | regex_replace('^notAfter=(.*)$','\\1')) | to_datetime('%b %d %H:%M:%S %Y %Z') - lookup('pipe','date +\"%b %d %H:%M:%S %Y %Z\"') | to_datetime('%b %d %H:%M:%S %Y %Z')).total_seconds() // 86400 | int }}"

    - name: determine if forced renewal is needed
      when: cert_stat.stat.exists
      set_fact:
        force_renew: "{{ (cert_days_left | int) <= expiration_threshold }}"

    - name: force renewal of certificate if expiring within threshold
      command: >
        certbot certonly
        --dns-cloudflare
        --dns-cloudflare-credentials "{{ cf_credentials_path }}"
        -d "{{ domain_name }}"
        --agree-tos
        --non-interactive
        --email "{{ email }}"
        --force-renewal
      when:
        - cert_stat.stat.exists
        - force_renew | default(false)
      register: certbot_forcerenew

    # Final debug message
    - name: issuance/renewal result
      debug:
        msg: |
          {% if certbot_initial is defined and (certbot_initial.rc | default(1)) == 0 %}
            Initial certificate for {{ domain_name }} created successfully.
            You can find it in /etc/letsencrypt/live/{{ domain_name }}/
          {% elif certbot_forcerenew is defined and (certbot_forcerenew.rc | default(1)) == 0 %}
            Certificate for {{ domain_name }} was renewed (forced) successfully.
            You can find it in /etc/letsencrypt/live/{{ domain_name }}/
          {% elif cert_stat.stat.exists %}
            Certificate for {{ domain_name }} already exists and is valid ({{ cert_days_left }} days until expiration).
            No renewal needed at this time.
          {% else %}
            Unexpected state. Check logs for details.
          {% endif %}
